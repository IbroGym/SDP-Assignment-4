Шаблонный метод — это поведенческий паттерн проектирования, который определяет скелет алгоритма, перекладывая ответственность за некоторые его шаги на подклассы. Паттерн позволяет подклассам переопределять шаги алгоритма, не меняя его общей структуры.

Описание простыми словами: Паттерн «Шаблонный метод» определяет общий алгоритм в базовом классе, но отдельные шаги этого алгоритма могут быть переопределены в подклассах. То есть у вас есть «шаблон» последовательности действий, который одинаков для всех реализаций, но конкретные шаги могут отличаться.

Пример из реальной жизни:
Представьте, что вы готовите завтрак. Вне зависимости от того, что вы готовите — яйца, овсянку или тосты — шаги будут похожи:

Вскипятить воду (если нужно).
Приготовить основной ингредиент (например, сварить яйца или пожарить тост).
Подать блюдо на стол.
При этом способ приготовления основного ингредиента будет разным для каждого блюда, хотя структура процесса одинакова. Шаблонный метод позволяет задать общие шаги в одном месте, а уникальные — оставить на усмотрение подклассов.

Проблемы, которые решает паттерн:
Дублирование кода: Если разные процессы имеют одинаковую структуру, но отличаются в деталях, без шаблонного метода придётся дублировать логику в каждом классе.
Сложности с изменением алгоритма: Если структура алгоритма меняется, придётся изменять все реализации вручную, что увеличивает риск ошибок.
Как шаблонный метод решает эти проблемы?
Унификация алгоритма: Общие шаги вынесены в базовый класс, что уменьшает дублирование кода.
Гибкость изменений: Если нужно изменить структуру алгоритма, достаточно изменить её в одном месте (в базовом классе). Подклассы при этом могут переопределять только уникальные шаги.