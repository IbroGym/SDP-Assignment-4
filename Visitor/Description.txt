Посетитель — это поведенческий паттерн проектирования, который позволяет добавлять в программу новые операции, не изменяя классы объектов, над которыми эти операции могут выполняться.

Описание простыми словами: Паттерн «Посетитель» позволяет добавлять новые операции к существующим классам без изменения их кода. Основная идея состоит в том, чтобы создать объект-посетитель, который реализует нужные операции. Этот посетитель обходит структуру объектов и выполняет разные действия с каждым из них. Классы объектов при этом остаются неизменными.

Пример из реальной жизни:
Представьте, что у вас есть музей с разными типами экспонатов — картины и скульптуры. В музей может прийти несколько посетителей:

Один посетитель хочет оценить стоимость экспонатов.
Другой — сделать фото каждого экспоната.
Классы самих экспонатов при этом не изменяются, а новые действия (оценка стоимости, фотографирование) реализуются через объекты-посетителей.

Проблема, которую решает Visitor
Добавление новых операций к существующим классам часто требует изменения их кода, что нарушает принцип открытости-закрытости (OCP). Это особенно проблематично, если классы уже разрабатываются и используются в других частях системы.
Решение: Паттерн «Посетитель» позволяет добавлять новые операции без изменения классов объектов. Это достигается за счёт создания отдельных объектов-посетителей, которые реализуют нужные действия.