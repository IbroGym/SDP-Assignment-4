Паттерн «Состояние» (State)
Описание паттерна: Паттерн «Состояние» позволяет объекту изменять своё поведение в зависимости от его внутреннего состояния. Это похоже на то, как объект может менять своё поведение, когда его состояние меняется (например, автомат по продаже напитков ведет себя по-разному в зависимости от того, полон ли он или пуст).

Пример из реальной жизни: Представьте, что у вас есть телефон, который может находиться в разных режимах: обычный, режим "Не беспокоить" или режим вибрации. Поведение телефона (вибрация, звонок или отсутствие реакции) меняется в зависимости от текущего режима (состояния).

Проблемы, которые решает паттерн:

Запутанная логика с множеством условий: Когда поведение объекта зависит от множества состояний, в коде появляется множество операторов if-else или switch-case, что усложняет его понимание и поддержку.
Трудности с добавлением новых состояний: Если нужно добавить новое состояние, приходится добавлять новые ветки в уже существующую логику, что увеличивает связанность и делает код менее гибким.
Как паттерн решает проблемы:

Разделение состояний: Паттерн "Состояние" предлагает вынести логику для каждого состояния в отдельный класс, что упрощает добавление новых состояний и позволяет легко изменять поведение объекта в зависимости от текущего состояния.
Минимизация условий: Вместо того чтобы использовать множество операторов if-else, объект просто делегирует выполнение действий своему текущему состоянию.